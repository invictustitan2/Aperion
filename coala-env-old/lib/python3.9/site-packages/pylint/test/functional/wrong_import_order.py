"""Checks import order rule"""
# pylint: disable=unused-import,relative-import,ungrouped-imports,import-error,no-name-in-module,relative-beyond-top-level
from __future__ import absolute_import

try:
    from six.moves import configparser
except ImportError:
    import configparser

import datetime  # [wrong-import-order]
import logging
import os.path  # [wrong-import-order]
import sys  # [wrong-import-order]

import astroid  # [wrong-import-order]
import six
import totally_missing  # [wrong-import-order]
import unused_import
from astroid import are_exclusive

from ..package3 import Class3
from . import package, package2
from .package import Class
from .package2 import Class2

LOGGER = logging.getLogger(__name__)


if LOGGER:
    # imports nested skipped
    import pprint
    from pprint import PrettyPrinter

    from . import package4


try:
    # imports nested skipped
    import random
    from random import division

    from . import package4
except ImportError:
    LOGGER.info('A useful message here')
