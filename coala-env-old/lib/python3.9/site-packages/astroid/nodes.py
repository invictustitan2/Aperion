# Copyright (c) 2006-2011, 2013 LOGILAB S.A. (Paris, FRANCE) <contact@logilab.fr>
# Copyright (c) 2014-2016 Claudiu Popa <pcmanticore@gmail.com>
# Copyright (c) 2014 Google, Inc.
# Copyright (c) 2015-2016 Cara Vinson <ceridwenv@gmail.com>

# Licensed under the LGPL: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html
# For details: https://github.com/PyCQA/astroid/blob/master/COPYING.LESSER

"""Every available node class.

.. seealso::
    :doc:`ast documentation <green_tree_snakes:nodes>`

All nodes inherit from :class:`~astroid.node_classes.NodeNG`.
"""
# pylint: disable=unused-import,redefined-builtin

from astroid.node_classes import (  # Backwards-compatibility aliases; Node not present in the builtin ast module.
    AnnAssign, Arguments, AssAttr, Assert, Assign, AssignAttr, AssignName,
    AssName, AsyncFor, AsyncWith, Attribute, AugAssign, Await, Backquote,
    BinOp, BoolOp, Break, Call, CallFunc, Compare, Comprehension, Const,
    Continue, Decorators, DelAttr, Delete, DelName, Dict, DictUnpack, Discard,
    Ellipsis, EmptyNode, ExceptHandler, Exec, Expr, ExtSlice, For,
    FormattedValue, From, Getattr, Global, If, IfExp, Import, ImportFrom,
    Index, JoinedStr, Keyword, List, Name, Nonlocal, Pass, Print, Raise, Repr,
    Return, Set, Slice, Starred, Subscript, TryExcept, TryFinally, Tuple,
    UnaryOp, Unknown, While, With, Yield, YieldFrom, const_factory)
from astroid.scoped_nodes import (  # Backwards-compatibility aliases
    AsyncFunctionDef, Class, ClassDef, DictComp, Function, FunctionDef,
    GeneratorExp, GenExpr, Lambda, ListComp, Module, SetComp)

ALL_NODE_CLASSES = (
    AsyncFunctionDef, AsyncFor, AsyncWith, Await,

    Arguments, AssignAttr, Assert, Assign, AnnAssign, AssignName, AugAssign,
    Repr, BinOp, BoolOp, Break,
    Call, ClassDef, Compare, Comprehension, Const, Continue,
    Decorators, DelAttr, DelName, Delete,
    Dict, DictComp, DictUnpack, Expr,
    Ellipsis, EmptyNode, ExceptHandler, Exec, ExtSlice,
    For, ImportFrom, FunctionDef,
    Attribute, GeneratorExp, Global,
    If, IfExp, Import, Index,
    Keyword,
    Lambda, List, ListComp,
    Name, Nonlocal,
    Module,
    Pass, Print,
    Raise, Return,
    Set, SetComp, Slice, Starred, Subscript,
    TryExcept, TryFinally, Tuple,
    UnaryOp,
    While, With,
    Yield, YieldFrom,
    FormattedValue, JoinedStr,
    )
